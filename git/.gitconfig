[user]
    email = anthony.brien@ubisoft.com
    name = Anthony Brien
[color]
  ui = auto
# [color "branch"]
#     current = yellow reverse
#     local = yellow
#     remote = green
[color "status"]
    added = yellow
    changed = green
    untracked = red
[core]
    editor = code --wait
    excludesfile = ~/.gitignore
    # prevent warning about CRLF conversion when using zsh
    safecrlf = false 
    autocrlf = true
[pull]
	rebase = true
[rebase]
	autosquash = true
[diff]
	tool = vscode
    guitool = p4merge
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE
[alias]
    # stage all
    a = add -A
    abort = rebase --abort
    # Detect moved or copied lines, and ignore whitespace
    blame = blame -w -M -C
    # Show all branches
    br = branch -av

    lga = log --graph --oneline --all --decorate
    lg = log --graph  --pretty='format:%C(yellow)%h%Cred%d%Creset %s %C(green)%an%C(bold blue), %cr' --date=short --abbrev-commit
    # View a pretty git log with branch tree
    #g = !git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    who = shortlog -s --
    # show log history timeline of commits with their files
    fh = !git log --format=format:'%C(bold cyan)%ar %C(reset) %C(green)%f' --name-status
	
    # Show all of my configured aliases
    aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort
  
    
    changelog = log --pretty=format:\" * %s\"

    # Which files are receiving the most "love"
    churn = !git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}'
    # View the log and diff for a commit (previous if no SHA1 provided)
    details = log -n1 -p --format=fuller
    # Return the repository's root directory (usefull for shell prompts)
    root = rev-parse --show-toplevel
    co = checkout
    ci = commit
    st = status
    # Uncommits last commit and places it back in the staging
    uncommit = reset --soft HEAD^
    unstage = reset HEAD
    stats = diff --stat
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard

[credential]
    helper = wincred

[advice]
#	statusHints = false

[merge]
    tool = vscode
    stat = true
    guitool = p4merge
    summary = true
[mergetool "vscode"]
    cmd = "code --wait $MERGED"

[url "https://github.com/"]
    insteadOf = gh:
[url "https://gist.github.com/"]
    insteadOf = gist:
[url "https://ubisoft.gitlab.com/"]
    insteadOf = gl:
[http]
    proxy = http://proxy:3128
    sslVerify = true
[https]
    proxy = http://proxy:3128
[url "https://"]
    insteadOf = git://
[branch]
    autosetuprebase = always
[mergetool]
    keepbackup = false
[difftool "p4merge"]
    path = C:/Program Files/Perforce/p4merge.exe
[mergetool "p4merge"]
    path = C:/Program Files/Perforce/p4merge.exe
[difftool "araxis"]
    path = C:/Program Files/Araxis/Araxis Merge/Compare.exe
[mergetool "araxis"]
    path = C:/Program Files/Araxis/Araxis Merge/Compare.exe

[winUpdater]
	recentlySeenVersion = 2.17.0.windows.1
